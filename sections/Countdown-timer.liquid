{% style %}

.countdown-main{
      background-color: #fc8a03;  padding:10px 0;
}
  
.page-width {
  color: #fff;
  margin: 0 auto;
  text-align: center;
}
.page-width ul{
   padding:0; margin:0;
}

li {
  display: inline-block;
  font-size:14px;
  list-style-type: none;
  padding:0 10px;
  text-transform: uppercase;
}

li span {
  display: block;
  font-size:14px;
}

.emoji {
  display: none;
  padding: 1rem;
}

.emoji span {
  font-size: 4rem;
  padding: 0 .5rem;
}

@media all and (max-width: 768px) {
  h1 {
    font-size: calc(1.5rem * var(--smaller));
  }
  
  li {
    font-size: calc(1.125rem * var(--smaller));
  }
  
  li span {
    font-size: calc(3.375rem * var(--smaller));
  }
}
{% endstyle %}

{% if section.settings.countdown_enable %}
<div class=" timer-sale" style="background-color:{{ section.settings.background }};">
            <countdown-timer
              data-year="{{ section.settings.year }}"
              data-month="{{ section.settings.month }}"
              data-day="{{ section.settings.day }}"
              data-hour="{{ section.settings.hour }}"
              data-minute="{{ section.settings.minute }}"
              data-hide-timer="{{ section.settings.hide_timer }}"
              data-complete-message="{{ section.settings.text }}"
            >
              <div class="countdown__display countdown__display--visible" data-time-display style="color:{{ section.settings.countdown-timer }};">
                <div class="countdown__display-block">
                  <h2 class="h3" date-days-placeholder>   </h2><span class="dot-coundown">:</span>
                 
                </div>
                <div class="countdown__display-block">
                  <h2 class="h3" date-hours-placeholder>   </h2><span class="dot-coundown">:</span>
                 
                </div>
                <div class="countdown__display-block">
                  <h2 class="h3" date-minutes-placeholder>   </h2><span class="dot-coundown">:</span>
                
                </div>
                <div class="countdown__display-block">
                  <h2 class="h3" date-seconds-placeholder>   </h2>
                 
                </div>
              </div>
              {% if section.settings.text != blank %}
                <div class="countdown__timer-message" data-message-placeholder>{{ block.settings.text }}</div>
              {% endif %}
            </countdown-timer>
  <div class="timer-text"style="color:{{ section.settings.title-color }};">
{{ section.settings.title }}
  </div>
          </div>
{% endif %}
<script>
  /*============================================================================
    CountdownTimer
  ==============================================================================*/
  
  class CountdownTimer extends HTMLElement {
    constructor() {
      super();
      this.el = this;
      this.display = this.querySelector('[data-time-display]');
      this.block = this.closest('.countdown__block--timer');
      this.year = this.el.dataset.year;
      this.month = this.el.dataset.month;
      this.day = this.el.dataset.day;
      this.hour = this.el.dataset.hour;
      this.minute = this.el.dataset.minute;
      this.daysPlaceholder = this.querySelector('[date-days-placeholder]');
      this.hoursPlaceholder = this.querySelector('[date-hours-placeholder]');
      this.minutesPlaceholder = this.querySelector('[date-minutes-placeholder]');
      this.secondsPlaceholder = this.querySelector('[date-seconds-placeholder]');
      this.messagePlaceholder = this.querySelector('[data-message-placeholder]');
      this.hideTimerOnComplete = this.el.dataset.hideTimer;
      this.completeMessage = this.el.dataset.completeMessage;
  
      this.timerComplete = false;
  
      this.init();
    }
  
    init() {
      setInterval(() => {
        if (!this.timerComplete) {
          this._calculate();
        }
      }, 1000);
  
    }
  
    _calculate() {
      // Find time difference and convert to integer
      const timeDifference = +new Date(`${this.month}/${this.day}/${this.year} ${this.hour}:${this.minute}:00`).getTime() - +new Date().getTime();
      // If time difference is greater than 0, calculate remaining time
      if (timeDifference > 0) {
        const intervals = {
          days: Math.floor(timeDifference / (1000 * 60 * 60 * 24)),
          hours: Math.floor((timeDifference / (1000 * 60 * 60)) % 24),
          minutes: Math.floor((timeDifference / 1000 / 60) % 60),
          seconds: Math.floor((timeDifference / 1000) % 60),
        };
  
        this.daysPlaceholder.innerHTML = intervals.days;
        this.hoursPlaceholder.innerHTML = intervals.hours;
        this.minutesPlaceholder.innerHTML = intervals.minutes;
        this.secondsPlaceholder.innerHTML = intervals.seconds;
      } else {
        if (this.completeMessage && this.messagePlaceholder) {
          this.messagePlaceholder.classList.add('countdown__timer-message--visible');
        }
  
        if (this.hideTimerOnComplete === 'true') {
          this.display.classList.remove('countdown__display--visible');
          this.display.classList.add('countdown__display--hidden');
        }
  
        if (!this.completeMessage && this.hideTimerOnComplete === 'true') {
          this.block.classList.add('countdown__block--hidden');
        }
  
        this.timerComplete = true;
      }
    }
  }
  
  customElements.define('countdown-timer', CountdownTimer);
 
  
</script>




{% schema %}
  {
    "name": "Countdown",
    "settings": [
      {
        "type": "text",
        "id": "date",
        "label": "Date"
      },
      {
        "type": "text",
        "id": "month",
        "label": "Month"
      }
      
    ],
    "presets": [
      {
        "name": "Countdown"
      }
    ]
  }
{% endschema %}